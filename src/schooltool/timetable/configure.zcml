<?xml version="1.0"?>
<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:security="http://schooltool.org/securitypolicy"
           xmlns:i18n="http://namespaces.zope.org/i18n"
           i18n_domain="schooltool">

  <!-- Application hook -->
  <subscriber
      for="schooltool.app.interfaces.IApplicationInitializationEvent"
      handler=".addToApplication"
      />

  <!-- Subscribers -->

  <subscriber
      for=".interfaces.IHaveTimetables"
      provides=".interfaces.ITimetableSource"
      factory="schooltool.timetable.source.MembershipTimetableSource"
      permission="zope.Public"
      />

  <subscriber
      for=".interfaces.IHaveTimetables"
      provides=".interfaces.ITimetableSource"
      factory="schooltool.timetable.source.InstructionTimetableSource"
      permission="zope.Public"
      />

  <subscriber
      for=".interfaces.IOwnTimetables"
      provides=".interfaces.ITimetableSource"
      factory="schooltool.timetable.source.OwnedTimetableSource"
      permission="zope.Public"
      />

  <adapter
      for=".interfaces.ITimetableSchemaContainer"
      factory="schooltool.app.app.SimpleNameChooser"
      provides="zope.app.container.interfaces.INameChooser" />

  <adapter
      factory=".TimetablesAdapter"
      trusted="true"
      permission="zope.Public" />

  <class class=".CompositeTimetables">
    <allow interface=".interfaces.ICompositeTimetables" />
  </class>

  <adapter
      factory=".CompositeTimetables"
      trusted="true"
      permission="zope.Public" />

  <utility
      provides=".interfaces.ITimetableModelFactory"
      name="SequentialDaysTimetableModel"
      component="schooltool.timetable.SequentialDaysTimetableModel"
      />

  <utility
      provides=".interfaces.ITimetableModelFactory"
      name="SequentialDayIdBasedTimetableModel"
      component="schooltool.timetable.SequentialDayIdBasedTimetableModel"
      />

  <utility
      provides=".interfaces.ITimetableModelFactory"
      name="WeeklyTimetableModel"
      component="schooltool.timetable.WeeklyTimetableModel"
      />

  <class class=".TimetableActivity">
    <allow interface=".interfaces.ITimetableActivity" />
  </class>

  <class class=".TimetableCalendarEvent">
    <!-- TTCalendarEvent does not have a __parent__, so fine-grained
         security declarations won't work. -->
    <allow interface=".interfaces.ITimetableCalendarEvent" />
  </class>

  <class class=".model.PersistentTimetableCalendarEvent">
    <allow interface=".interfaces.ITimetableCalendarEvent" />
    <require
       permission="schooltool.edit"
       set_schema=".interfaces.ITimetableCalendarEvent" />
  </class>

  <class class=".TimetableDict">
    <require permission="schooltool.edit"
             interface="zope.app.container.interfaces.IWriteContainer" />
    <require permission="schooltool.view"
             interface="zope.app.container.interfaces.IReadContainer" />
  </class>

  <interface
      interface=".interfaces.ITimetableSchemaContainer"
      type="zope.app.content.interfaces.IContentType"
      />

  <class class=".schema.TimetableSchemaContainer">
    <require permission="schooltool.edit"
             interface="zope.app.container.interfaces.IWriteContainer"
             set_attributes="default_id" />
    <require permission="zope.View"
             interface="zope.app.container.interfaces.IReadContainer"
             attributes="getDefault default_id" />
  </class>

  <class class=".Timetable">
    <allow interface=".interfaces.ITimetable" />
    <require permission="schooltool.edit"
             interface=".interfaces.ITimetableWrite"
             set_schema=".interfaces.ITimetable" />
  </class>

  <class class=".TimetableDay">
    <allow interface=".interfaces.ITimetableDay" />
    <require permission="schooltool.edit"
             interface=".interfaces.ITimetableDayWrite"
             set_schema=".interfaces.ITimetableDay" />
  </class>

  <interface
      interface=".interfaces.ITimetableSchema"
      type="zope.app.content.interfaces.IContentType"
      />

  <class class=".schema.TimetableSchema">
    <allow interface=".interfaces.ITimetableSchema" />
    <require permission="schooltool.edit"
             interface=".interfaces.ITimetableSchemaWrite"
             set_schema=".interfaces.ITimetableSchema" />
  </class>

  <class class=".schema.TimetableSchemaDay">
    <allow interface=".interfaces.ITimetableSchemaDay" />
  </class>

  <class class=".SchooldayTemplate">
    <allow interface=".interfaces.ISchooldayTemplate" />
    <require permission="schooltool.edit"
             interface=".interfaces.ISchooldayTemplateWrite"
             set_schema=".interfaces.ISchooldayTemplate" />
  </class>

  <class class=".SequentialDaysTimetableModel">
    <allow interface=".interfaces.IWeekdayBasedTimetableModel" />
  </class>

  <class class=".SequentialDayIdBasedTimetableModel">
    <allow interface=".interfaces.IDayIdBasedTimetableModel" />
  </class>

  <class class=".WeeklyTimetableModel">
    <allow interface=".interfaces.IWeekdayBasedTimetableModel" />
  </class>

  <class class=".SchooldaySlot">
    <allow interface=".interfaces.ISchooldaySlot" />
  </class>

  <!-- sample data -->
  <configure
      xmlns:zcml="http://namespaces.zope.org/zcml"
      zcml:condition="have devmode">

    <utility
        factory=".sampledata.SampleTimetableSchema"
        provides="schooltool.sampledata.interfaces.ISampleDataPlugin"
        name="ttschema"
        />

  </configure>

  <include package=".browser" />
  <include package=".rest" />

  <security:allow
      interface="schooltool.timetable.interfaces.ITimetableSchemaContainer"
      crowds="administration everybody"
      permission="schooltool.view" />
  <security:allow
      interface="schooltool.timetable.interfaces.ITimetableSchemaContainer"
      crowds="administration"
      permission="schooltool.edit" />

  <subscriber
      for="schooltool.timetable.interfaces.ITimetableActivityAddedEvent"
      handler=".model.addEventsToCalendar" />

  <subscriber
      for="schooltool.timetable.interfaces.ITimetableActivityRemovedEvent"
      handler=".model.removeEventsFromCalendar" />

  <subscriber
      for="schooltool.timetable.interfaces.ITimetableReplacedEvent"
      handler=".model.handleTimetableReplacedEvent" />

</configure>
