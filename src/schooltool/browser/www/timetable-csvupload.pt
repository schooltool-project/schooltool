<html metal:use-macro="view/macros/page" i18n:domain="schooltool">
<head>
  <title metal:fill-slot="title" i18n:translate="">
    Upload schooltool timetable as CSV
  </title>
</head>
<!-- TODO: javascript magic to disable the 'other' field when an encoding is
           chosen from the dropdown box -->
<body>
<h1 metal:fill-slot="h1" i18n:translate="">Upload CSV data</h1>
<metal:block metal:fill-slot="content">

  <form method="POST" enctype="multipart/form-data"
        tal:attributes="action request/path">
    <div class="error" tal:condition="view/error" tal:content="view/error" />
    <div class="info" tal:condition="view/success"
         i18n:translate="">Data imported successfully.</div>

    <div class="row">
      <label for="timetable_csv" i18n:translate="">timetable.csv</label>
      <input id="timtable_csv" type="file" name="roster.csv" />
    </div>

    <div class="row">
      <label for="roster_csv" i18n:translate="">roster.csv</label>
      <input id="roster_csv" type="file" name="roster.csv" />
    </div>

    <div class="row" tal:replace="structure view/charset_widget">
      [Charset]
    </div>
    <div class="row" tal:replace="structure view/other_charset_widget">
      [Charset if Other was selected]
    </div>

  <div class="buttons">
    <input class="button" type="submit" value="Submit"
           i18n:attributes="value" />
  </div>

  </form>

  <p style="clear:both" i18n:translate="">
    Note that the import may take a while.  Please be patient.
  </p>

  <hr />

  <h2 i18n:translate="">Format of the files</h2>

    <p i18n:translate="">
      You can create these files in a spreadsheet and export them in the comma
      separated value format described below.
    </p>

    <p style="clear:both" i18n:translate="">
      <strong>timetable.csv</strong> contains lines of comma-separated values
      TODO TODO TODO</p>

</metal:block>
</body>
</html>
