<!-- batch navigation

The following must be defined in the page prior to calling the batch-navigation
macro:

  batch - a schooltool.batching.Batch instance


Batch navigation shows up if:

  * There is a next or a previous batch
  * We are currently showing more than the default batch size (this assumes
    'show more' has been selected and there will be a batch if 'show less' is
    selected).

-->
<metal:block define-macro="batch-navigation" i18n:domain="schooltool">
  <div class="batch-navigation"
    tal:define="batch_size python:int(request.get('batch_size', 10));
                extra_url extra_url|nothing;
                extra_url python:extra_url or '';
                needsBatch python:bool(batch.prev() or batch.next());
                base_url request/URL;"
    tal:condition="python:batch_size > 10 or needsBatch">

    <tal:if condition="needsBatch">
      <span tal:condition="not:batch/prev" class="previous">
        &laquo; <span i18n:translate="">Previous</span>
      </span>

      <a class="previous"
        tal:condition="batch/prev"
        tal:attributes="href python:'%s?batch_start=%s&batch_size=%s%s' % (base_url, batch.prev().start, batch_size, extra_url)"
        i18n:translate="">
        &laquo; <span i18n:translate="">Previous</span>
        <span tal:content="python:len(batch.prev())"/>
      </a>
    </tal:if>

    <metal:macro use-macro="view/@@batch_macros/batch-navigation-all-or-less"/>

    <tal:if condition="needsBatch">
      <a class="next"
        tal:condition="batch/next"
        tal:attributes="href python:'%s?batch_start=%s&batch_size=%s%s' % (base_url, batch.next().start, batch_size, extra_url)">
        <span i18n:translate="">Next</span>
        <span tal:content="python:len(batch.next())"/> &raquo;
      </a>

      <span tal:condition="not:batch/next" i18n:translate="" class="next">
        <span i18n:translate="">Next</span> &raquo;
      </span>

      <tal:comment condition="nothing">
        A complicated bit of TAL here.  We need to figure out when we should
        crop the navigation bar to keep it from wrapping around.

        The logic goes like this:

        * if we are in the first 6 items of the batch, show the first 9 items,
          an ellipsis and the last item
        * if we are within 6 items of the end of the batch, show the first
          item, an ellipsis and the last 9 items
        * if we are in neither of the above, show the first item, an ellipsis,
          7 items (two behind, current and two ahead), another ellipsis and the
          last item.
      </tal:comment>

      <tal:if define="cur batch/num;
                      total batch/numBatches;
                      urls python:batch.batch_urls(base_url, extra_url)"
              condition="python:total > 11">

        <tal:if condition="python:cur <= 6">
          <span tal:repeat="b python:urls[:9]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
          <span class="separator">...</span>
          <tal:block define="b python:urls[-1]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
        </tal:if>

        <tal:if condition="python:cur < (total - 4) and (cur > 6)">
          <tal:block define="b python:urls[0]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
          <span class="separator">...</span>
          <span tal:repeat="b python:urls[cur - 4: cur + 3]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
          <span class="separator">...</span>
          <tal:block define="b python:urls[-1]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
        </tal:if>

        <tal:if condition="python:cur >= total - 4">
          <tal:block define="b python:urls[0]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
          <span class="separator">...</span>
          <span tal:repeat="b python:urls[-8:]">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
        </tal:if>

      </tal:if>

      <tal:if condition="not:python:batch.numBatches() > 11">
        <span tal:repeat="b python:batch.batch_urls(base_url, extra_url)">
          <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
        </span>
      </tal:if>
    </tal:if>

  </div>

</metal:block>

<metal:block define-macro="batch-navigation-all-or-less">
  <div class="batch-extra-navigation"
       tal:define="full_size python:len(batch.list)">

    <a tal:attributes="href string:${base_url}?batch_size=10"
       tal:condition="python:batch_size > 10"
       class="less">Show Less</a>

    <a tal:attributes="href string:${base_url}?batch_size=${full_size}"
       tal:condition="python:batch_size < full_size"
       class="all">Show All</a>

  </div>
</metal:block>

<!-- multi-batch navigation

multi-batch-navigation is intended for use with the MultiBatchViewMixin class.
It follows the same guidelins as batch-navigation with the addition of:

  batch_name - the name of the batch from MultiBatchViewMixin

-->
<metal:block define-macro="multi-batch-navigation">
  <div class="batch-navigation"
    tal:define="batch_size python:int(request.get('batch_size.' + batch_name, 10));
                extra_url extra_url|nothing;
                extra_url python:extra_url or '';
                needsBatch python:bool(batch.prev() or batch.next());
                base_url request/URL"
    tal:condition="python:batch_size > 10 or needsBatch">

    <tal:if condition="needsBatch">
      <span tal:condition="not:batch/prev" i18n:translate=""
        class="previous">&laquo; Previous</span>
      <a class="previous"
        tal:condition="batch/prev"
        tal:attributes="href python:'%s?batch_start.%s=%s&batch_size.%s=%s%s' % (base_url, batch_name, batch.prev().start, batch_name, batch_size, extra_url)"
        i18n:translate=""
        >&laquo; Previous</a>
    </tal:if>

    <metal:macro use-macro="view/@@batch_macros/multi-batch-navigation-all-or-less"/>

    <tal:if condition="needsBatch">
      <a class="next"
        tal:condition="batch/next"
        tal:attributes="href python:'%s?batch_start.%s=%s&batch_size.%s=%s%s' % (base_url, batch_name, batch.next().start, batch_name, batch_size, extra_url)"
        i18n:translate=""
        >Next &raquo;</a>

      <span tal:condition="not:batch/next" i18n:translate=""
        class="next">Next &raquo;</span>

      <tal:if define="cur batch/num;
                      total batch/numBatches;
                      urls python:batch.batch_urls(base_url, extra_url, batch_name)"
              condition="python:total > 11">

        <tal:if condition="python:cur <= 6">
          <span tal:repeat="b python:urls[:9]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
          <span class="separator">...</span>
          <tal:block define="b python:urls[-1]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
        </tal:if>

        <tal:if condition="python:cur < (total - 4) and (cur > 6)">
          <tal:block define="b python:urls[0]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
          <span class="separator">...</span>
          <span tal:repeat="b python:urls[cur - 4: cur + 3]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
          <span class="separator">...</span>
          <tal:block define="b python:urls[-1]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
        </tal:if>

        <tal:if condition="python:cur >= total - 4">
          <tal:block define="b python:urls[0]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </tal:block>
          <span class="separator">...</span>
          <span tal:repeat="b python:urls[-8:]">
              <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
          </span>
        </tal:if>

      </tal:if>

      <tal:if condition="not:python:batch.numBatches() > 11">
        <span tal:repeat="b python:batch.batch_urls(base_url, extra_url, batch_name)">
            <a tal:attributes="href b/href; class b/class" tal:content="b/num" />
        </span>
      </tal:if>
    </tal:if>
  </div>

</metal:block>

<metal:block define-macro="multi-batch-navigation-all-or-less">
  <div class="batch-extra-navigation"
       tal:define="full_size python:len(batch.list)">

    <a tal:attributes="href string:${base_url}?batch_size.${batch_name}=10"
       tal:condition="python:batch_size > 10"
       class="less">Show Less</a>

    <a tal:attributes="href string:${base_url}?batch_size.${batch_name}=${full_size}"
       tal:condition="python:batch_size < full_size"
       class="all">Show All</a>

  </div>
</metal:block>
