Functional doctest for schooltool security policy
=================================================

This test verifies the security policy.

Set up
------

We will obviously need a SchoolTool instance.

    >>> from schooltool.app.browser.ftests import setup
    >>> from schooltool.securitypolicy.browser.ftests.helpers import column
    >>> from schooltool.securitypolicy.browser.ftests import helpers
    >>> from zope.testbrowser.testing import Browser
    >>> manager = setup.logInManager()

    >>> 'SchoolTool' in manager.contents
    True

Let's create some persons:

    >>> setup.addPerson('Student1', 'student1', 'student1', groups=['students'])
    >>> setup.addPerson('Student2', 'student2', 'student2', groups=['students'])
    >>> setup.addPerson('Student3', 'student3', 'student3', groups=['students'])
    >>> setup.addPerson('Teacher1', 'teacher1', 'teacher1', groups=['teachers'])
    >>> setup.addPerson('Teacher2', 'teacher2', 'teacher2', groups=['teachers'])

    >>> setup.setUpTimetabling('instructor1', 'instructor1')

Section and resources:

    >>> manager.getLink('SchoolTool').click()
    >>> manager.getLink('Resources').click()
    >>> manager.getLink('New Resource').click()
    >>> manager.getControl('Title').value = 'Time travel machine'
    >>> manager.getControl('Identifier').value = 'ttm'
    >>> manager.getControl('Add').click()

    >>> manager.getLink('Sections').click()
    >>> manager.getLink('history-6a').click()
    >>> manager.getLink('edit individuals').click()
    >>> manager.getControl('Student1').click()
    >>> manager.getControl('Add').click()
    >>> manager.getLink('history-6a').click()
    >>> manager.getLink('book resources').click()
    >>> manager.getControl('Time travel machine').click()
    >>> manager.getControl('Add').click()

Set up activities and put marks:

    >>> manager.getLink('SchoolTool').click()
    >>> manager.getLink('Courses').click()
    >>> manager.getLink('History 6').click()
    >>> manager.getLink('history-6a').click()
    >>> manager.getLink('Activities').click()
    >>> manager.getLink('New Activity').click()
    >>> manager.getControl('Title').value = 'SchoolTool origin'
    >>> manager.getControl('Custom score system').click()
    >>> manager.getControl('Minimum').value = '1'
    >>> manager.getControl('Maximum').value = '5'
    >>> manager.getControl('Identifier').value = 'storig'
    >>> manager.getControl('Add').click()
    >>> manager.getLink('history-6a').click()
    >>> manager.getLink('Gradebook').click()
    >>> manager.getLink('SchoolTool origin').click()
    Traceback (most recent call last):
    ...
    Unauthorized: ...

Administration can't grade students by default, but can give itself
the permission to do it:

    >>> manager.open('http://localhost')
    >>> manager.getLink('Access Control').click()
    >>> manager.getControl('Administration can grade students').click()
    >>> manager.getControl('Apply').click()

And try again:

    >>> manager.getLink('SchoolTool').click()
    >>> manager.getLink('Courses').click()
    >>> manager.getLink('History 6').click()
    >>> manager.getLink('history-6a').click()
    >>> manager.getLink('Gradebook').click()
    >>> manager.getLink('SchoolTool origin').click()
    >>> manager.getControl(name='student1').value = '8'
    >>> manager.getControl('Update').click()

Let's set the setting back to cover our tracks:

    >>> manager.getLink('Access Control').click()
    >>> manager.getControl('Administration can grade students').click()
    >>> manager.getControl('Apply').click()

Set up leader for everything:

    >>> manager.open('http://localhost/')
    >>> manager.getLink('Groups').click()
    >>> manager.getLink('Teachers').click()
    >>> manager.getLink('Edit Leaders').click()
    >>> manager.getControl('Teacher2').click()
    >>> manager.getControl('Add').click()
    >>> manager.getLink('Resources').click()
    >>> manager.getLink('Time travel machine').click()
    >>> manager.getLink('Edit Leaders').click()
    >>> manager.getControl('Teacher2').click()
    >>> manager.getControl('Add').click()
    >>> manager.getLink('Courses').click()
    >>> manager.getLink('History 6').click()
    >>> manager.getLink('Edit Leaders').click()
    >>> manager.getControl('Teacher2').click()
    >>> manager.getControl('Add').click()

Manager can see almost everything:

    >>> column(manager, 'student1', 'history6a')
    course: view edit
    course activities: view edit
    gradebook scores: view
    group calendar: view edit
    group container: view edit
    group data: view edit
    level: view edit
    overlay calendar:
    permissions: view edit
    person attendance: view
    person calendar: view edit
    person container: view edit
    person data: view edit
    person preferences: view edit
    resource calendar: view edit
    resource container: view edit
    resource data: view edit
    schooltool: view
    schooltool calendar: view edit
    schooltool info: view edit
    section: view edit
    section activities: view edit
    section attendance: view edit
    section calendar: view edit
    term: view edit
    timetables: view edit

Create anonymous browser:

    >>> alien = Browser()
    >>> alien.handleErrors = False
    >>> alien.open('http://localhost/')
    >>> column(alien, 'student1', 'history6a')
    course: view
    course activities: view
    gradebook scores:
    group calendar:
    group container:
    group data:
    level: view
    overlay calendar:
    permissions:
    person attendance:
    person calendar:
    person container:
    person data:
    person preferences:
    resource calendar:
    resource container:
    resource data:
    schooltool: view
    schooltool calendar: view
    schooltool info:
    section:
    section activities:
    section attendance:
    section calendar:
    term: view
    timetables: view

Student looking at another student:

    >>> student1 = setup.logIn('student1', 'student1')
    >>> column(student1, 'student2', 'history6a')
    course: view
    course activities: view
    gradebook scores:
    group calendar:
    group container:
    group data:
    level: view
    overlay calendar:
    permissions:
    person attendance:
    person calendar:
    person container:
    person data:
    person preferences:
    resource calendar:
    resource container:
    resource data:
    schooltool: view
    schooltool calendar: view
    schooltool info:
    section: view
    section activities:
    section attendance:
    section calendar: view
    term: view
    timetables: view

XXX: above should be: "section activities: view"

Student looking at himself (his section):

    >>> helpers.column2(student1, 'student1', 'history6a')
    course: True False
    course activities: True False
    gradebook scores: False False
    group calendar: False False
    group container: False False
    group data: False False
    level: True False
    overlay calendar: None True
    permissions: False False
    person attendance: True False
    person calendar: True True
    person container: False False
    person data: True False
    person preferences: True True
    resource calendar: False False
    resource container: False False
    resource data: False False
    schooltool: True None
    schooltool calendar: True False
    schooltool info: False False
    section: True False
    section activities: False False
    section attendance: False False
    section calendar: True False
    term: True False
    timetables: True False

Student looking at another student and not his section:

    >>> student2 = setup.logIn('student2', 'student2')
    >>> column(student2, 'student1', 'history6a')
    course: view
    course activities: view
    gradebook scores:
    group calendar:
    group container:
    group data:
    level: view
    overlay calendar:
    permissions:
    person attendance:
    person calendar:
    person container:
    person data:
    person preferences:
    resource calendar:
    resource container:
    resource data:
    schooltool: view
    schooltool calendar: view
    schooltool info:
    section:
    section activities:
    section attendance:
    section calendar:
    term: view
    timetables: view

Instructor looking at his student and section:

    >>> instructor = setup.logIn('instructor1', 'instructor1')
    >>> column(instructor, 'student1', 'history6a')
    course: view
    course activities: view
    gradebook scores:
    group calendar:
    group container:
    group data:
    level: view
    overlay calendar:
    permissions:
    person attendance: view
    person calendar:
    person container:
    person data: view
    person preferences:
    resource calendar:
    resource container:
    resource data:
    schooltool: view
    schooltool calendar: view
    schooltool info:
    section: view edit
    section activities:
    section attendance: view edit
    section calendar: view edit
    term: view
    timetables: view

XXX: should be "section activities: view edit" (bug in activities)
XXX: should be "gradebook scores: view edit" (bug in activities)

Leader stuff:

#   >>> leader = setup.logIn('teacher2', 'teacher2')
#   >>> column(leader, 'student1', 'history6a')
#   course: view edit
#   course activities: view edit
#   gradebook scores:
#   group calendar: view edit
#   group container:
#   group data: view edit
#   level: view
#   overlay calendar:
#   permissions:
#   person attendance:
#   person calendar:
#   person container:
#   person data:
#   person preferences:
#   resource calendar: view edit
#   resource container:
#   resource data: view edit
#   schooltool: view
#   schooltool calendar: view
#   schooltool info:
#   section:
#   section activities:
#   section attendance:
#   section calendar:
#   term: view
#   timetables: view


Configurable options
====================

Make personal calendar public:

    >>> student1.open('http://localhost')
    >>> student1.getLink('Student1').click()
    >>> student1.getLink('Change Preferences').click()
    >>> student1.getControl('Make calendar public').click()
    >>> student1.getControl('Apply').click()
    >>> helpers.person_calendar_view(alien, 'student1')
    True

