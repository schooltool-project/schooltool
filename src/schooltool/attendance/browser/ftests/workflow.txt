Attendance workflow
===================

Let's set up a subscriber that prints out all the events:

    >>> def log_workflow(event):
    ...     print event

    >>> from datetime import datetime
    >>> from pytz import utc
    >>> import zope.event
    >>> from zope.app.testing.functional import setSite
    >>> zope.event.subscribers.append(log_workflow)
    >>> setSite(getRootFolder())

Now we can create the process:

    >>> from schooltool.person.person import Person
    >>> from schooltool.attendance.attendance import SectionAttendanceRecord
    >>> from schooltool.attendance.attendance import ABSENT
    >>> person = Person('jonas', title='Jonas')
    >>> dt = datetime(2006, 4, 14, tzinfo=utc)
    >>> ar = SectionAttendanceRecord('sekcija', dt, ABSENT, person)
    ProcessStarted(Process('schooltool.attendance.explanation'))
    Transition(None, Activity('schooltool.attendance.explanation.create'))
    ActivityStarted(Activity('schooltool.attendance.explanation.create'))
    ActivityFinished(Activity('schooltool.attendance.explanation.create'))
    Transition(Activity('schooltool.attendance.explanation.create'),
               Activity('schooltool.attendance.explanation.explain'))
    ActivityStarted(Activity('schooltool.attendance.explanation.explain'))

Let's make the attendance record a tardy:

    >>> ar.makeTardy(datetime(2005, 1, 1, 10, 15))
    WorkItemFinished(u'WaitForExplanation')
    ActivityFinished(Activity('schooltool.attendance.explanation.explain'))
    Transition(Activity('schooltool.attendance.explanation.explain'),
               Activity('schooltool.attendance.explanation.makeTardy'))
    ActivityStarted(Activity('schooltool.attendance.explanation.makeTardy'))
    WorkItemFinished(u'MakeTardy')
    ActivityFinished(Activity('schooltool.attendance.explanation.makeTardy'))
    Transition(Activity('schooltool.attendance.explanation.makeTardy'),
               Activity('schooltool.attendance.explanation.explain'))
    ActivityStarted(Activity('schooltool.attendance.explanation.explain'))

It should be tardy now:

    >>> ar.isTardy()
    True
    >>> ar.late_arrival
    datetime.datetime(2005, 1, 1, 10, 15)

Let's add an explanation:

    >>> ar.addExplanation('space aliens abducted me')

and reject it

    >>> ar.rejectExplanation()
    WorkItemFinished(u'WaitForExplanation')
    ActivityFinished(Activity('schooltool.attendance.explanation.explain'))
    Transition(Activity('schooltool.attendance.explanation.explain'),
               Activity('schooltool.attendance.explanation.reject'))
    ActivityStarted(Activity('schooltool.attendance.explanation.reject'))
    WorkItemFinished(u'RejectExplanation')
    ActivityFinished(Activity('schooltool.attendance.explanation.reject'))
    Transition(Activity('schooltool.attendance.explanation.reject'),
               Activity('schooltool.attendance.explanation.explain'))
    ActivityStarted(Activity('schooltool.attendance.explanation.explain'))

    >>> def printExplanations(ar):
    ...     for e in ar.explanations:
    ...         print e.status + ':', e.text

    >>> printExplanations(ar)
    REJECTED: space aliens abducted me

Let's add a better explanation:

    >>> ar.addExplanation('I was lazy')

and accept it

    >>> ar.acceptExplanation('001')
    WorkItemFinished(u'WaitForExplanation')
    ActivityFinished(Activity('schooltool.attendance.explanation.explain'))
    Transition(Activity('schooltool.attendance.explanation.explain'),
               Activity('schooltool.attendance.explanation.excuse'))
    ActivityStarted(Activity('schooltool.attendance.explanation.excuse'))
    WorkItemFinished(u'AcceptExplanation')
    ActivityFinished(Activity('schooltool.attendance.explanation.excuse'))
    ProcessFinished(Process('schooltool.attendance.explanation'))

    >>> printExplanations(ar)
    REJECTED: space aliens abducted me
    ACCEPTED: I was lazy

This concludes our workflow process.


Clean up:

    >>> zope.event.subscribers = zope.event.subscribers[:-1]
    >>> setSite(None)
