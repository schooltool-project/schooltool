Realtime Attendance Form
========================


Overview
--------

1. Define a simple school structure (courses, sections, timetables).
2. Look at the real-time attendance form, then use it.
3. Look for absence events in the student's calendar.
4. Look at nice sparklines.
5. Take a brief glance at the student's attendance view.


Setup
-----

This is going to be a bit boring, since we start with a clean slate.

A manager logs in

    >>> from zope.testbrowser.testing import Browser
    >>> manager = Browser()
    >>> manager.addHeader('Authorization', 'Basic manager:schooltool')
    >>> manager.handleErrors = False
    >>> manager.open('http://localhost/')

and creates a course and a section

    >>> from schooltool.app.browser.ftests import setup
    >>> setup.addCourse('Dancing 1')
    >>> setup.addSection('Dancing 1')

We also need a term and a timetable

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('Terms').click()
    >>> manager.getLink('New Term').click()
    >>> manager.getControl('Title').value = '2005 Fall'
    >>> manager.getControl('Start date').value = '2005-09-01'
    >>> manager.getControl('End date').value = '2006-01-31'
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Sunday').click()
    >>> manager.getControl('Saturday').click()
    >>> manager.getControl('Add term').click()

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('School Timetables').click()
    >>> manager.getLink('New Timetable').click()
    >>> manager.getControl('Title').value = 'default'
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Days of the week').click()
    >>> manager.getControl('Same time each day').click()
    >>> manager.getControl(name='field.times').value = """
    ...    9:30-10:25
    ...    10:30-11:25
    ...    11:35-12:20
    ...    12:45-13:30
    ...    13:35-14:20
    ...    14:30-15:15
    ... """
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Designated by time').click()
    >>> manager.getControl('No').click()

Let's schedule the section

    >>> manager.open('http://localhost/sections/1')
    >>> manager.getLink('Schedule').click()

    >>> manager.getControl(name="Monday.09:30-10:25").value = True
    >>> manager.getControl(name="Wednesday.11:35-12:20").value = True
    >>> manager.getControl('Save').click()

Let's also create a teacher for the section

    >>> from schooltool.app.browser.ftests.setup import addPerson
    >>> addPerson('Great Teacher Largo', 'largo', 'sittinghorse', 
    ...     groups=['teachers'])

    >>> manager.open('http://localhost/sections/1')
    >>> manager.getLink('edit instructors').click()
    >>> manager.getControl('Great Teacher Largo').selected = True
    >>> manager.getControl('Add').click()

Create clerk

    >>> addPerson('Krumpetzki', 'harvie', 'facts', groups=['clerks'])

Create some students

    >>> addPerson('Joniukas', 'joniukas', 'gretute', groups=['students'])
    >>> addPerson('Gretute', 'gretute', 'tenerife', groups=['students'])

Add them to dancing section

    >>> manager.open('http://localhost/sections/1')
    >>> manager.getLink('edit individuals').click()
    >>> manager.getControl('Joniukas').selected = True
    >>> manager.getControl('Gretute').selected = True
    >>> manager.getControl('Add').click()


Real-time attendance form
-------------------------

Let's say now it's 2005-12-12T9:44Z:

    >>> from pytz import utc
    >>> from datetime import datetime
    >>> from schooltool.calendar.utils import stub_utcnow
    >>> stub_utcnow(datetime(2005, 12, 12, 9, 44, tzinfo=utc))


The teacher logs in

    >>> largo = Browser()
    >>> largo.handleErrors = False
    >>> largo.addHeader('Authorization', 'Basic largo:sittinghorse')

Looks at his daily view, and sees the Dancing section there:

    >>> largo.open('http://localhost/persons/largo/calendar/2005-12-12')
    >>> print analyze.queryHTML('id("content-body")', largo.contents)[0]
    <div id="content-body">
    ...
      <h6 style="background: #...">
        <a href="http://localhost/sections/1/calendar/..." title="Dancing 1">
          Dancing 1
          <span class="start-end">
            (<span>09:30</span>
             -
            <span>10:25</span>)
          </span>
        </a>
      </h6>
    ...

You can go to the section attendance form by following the 'Attendance' link in
the event box.

    >>> largo.getLink('Attendance', url="1").click()
    >>> print analyze.queryHTML('id("content-header")', largo.contents)[0]
    <div id="content-header">
    <h2>Section attendance for Great Teacher Largo -- Dancing 1 (1)  at 2005-12-12
    period 09:30-10:25</h2>
    </div>

    >>> print analyze.queryHTML('id("content-body")', largo.contents)[0]
    <div id="content-body">
    <BLANKLINE>
    <form method="POST" action="http://localhost/sections/1/attendance/2005-12-12/09%3A30-10%3A25">
    ...

Mark Joniukas as absent:

    >>> largo.getControl(name='joniukas_check').value=True
    >>> largo.getControl('Mark as absent').click()

Joniukas is marked as absent, and Gretute is marked as present (checkbox disabled)

    >>> print '\n'.join(analyze.queryHTML('//tr[@class="attendance-row"]', largo.contents))
    <tr class="attendance-row"><td>
          <input type="checkbox" disabled="disabled" name="gretute_check" id="gretute_check" /></td>...
           <label for="gretute_check">Gretute</label>...
          +
    ...
    <tr class="attendance-row"><td>
          <input type="checkbox" name="joniukas_check" id="joniukas_check" /></td>...
           <label for="joniukas_check">Joniukas</label>...
          -
    ...


An absence event should be visible in his calendar:

    >>> joniukas = Browser()
    >>> joniukas.addHeader('Authorization', 'Basic joniukas:gretute')
    >>> joniukas.handleErrors = False
    >>> joniukas.open('http://localhost/persons/joniukas/calendar/2005-12-12')

    >>> print joniukas.contents
    <BLANKLINE>
    ...
      <h6 style="background: ...">
          Was absent from...
          <span class="start-end">
            (<span>09:30</span>
              - <span>10:25</span>)
          </span>
      </h6>
    ...
      <div class="title">Was absent from Dancing 1 (1).</div>
    ...


Finaly Joniukas is here, make him tardy

    >>> largo.getControl(name='joniukas_check').value=True
    >>> largo.getControl('Minutes late:').value = 'too late'
    >>> largo.getControl('Make tardy').click()

We should have entered time...

    >>> print analyze.queryHTML('//div[@class="error"]', largo.contents)[0]
    <div class="error">The arrival time you entered is invalid.  Please use HH:MM format</div>

Try it again (Joniukas remains checked)

    >>> largo.getControl(name='joniukas_check').value
    True
    >>> largo.getControl('Minutes late:').value = '52'
    >>> largo.getControl('Make tardy').click()

Now Joniukas is tardy

    >>> print '\n'.join(analyze.queryHTML('//tr[@class="attendance-row"]', largo.contents))
    <tr class="attendance-row"><td>
          <input type="checkbox" disabled="disabled" name="gretute_check" id="gretute_check" />...
           <label for="gretute_check">Gretute</label>...
          +
    ...
    <tr class="attendance-row"><td>
          <input type="checkbox" disabled="disabled" name="joniukas_check" id="joniukas_check" />...
           <label for="joniukas_check">Joniukas</label>...
          T
    ...

And the absence event is replaced with a tardy event:

    >>> joniukas.open('http://localhost/persons/joniukas/calendar/2005-12-12')

    >>> print joniukas.contents
    <BLANKLINE>
    ...
      <h6 style="background: ...">
           Was late for Da...
           <span class="start-end">
             (<span>09:30</span>
               - <span>10:25</span>)
           </span>
      </h6>
    ...
      <div class="title">Was late for Dancing 1 (1) (52 minutes).</div>
    ...


Sparkline
---------

Look at the attendance event for the next section meeting. Each person has
attendance sparkline drawn along with the status symbol:

    >>> largo.open('http://localhost/persons/largo/calendar/2005-12-14')
    >>> largo.getLink('Attendance', url="1").click()
    >>> print '\n'.join(analyze.queryHTML('//img[@width="30"]', largo.contents))
    <img alt="attendance graph for the last 10 days" width="30" height="13" src="http://localhost/sections/1/@@sparkline.png?person=gretute&amp;date=2005-12-14" />
    <img alt="attendance graph for the last 10 days" width="30" height="13" src="http://localhost/sections/1/@@sparkline.png?person=joniukas&amp;date=2005-12-14" />

"Look" at the attendance sparkline for joniukas

    >>> largo.open('http://localhost/sections/1/@@sparkline.png?person=joniukas&amp;date=2005-12-14')
    >>> image = largo.contents

It looks like this

    >>> from PIL import Image
    >>> import StringIO
    >>> image_file = StringIO.StringIO(image)
    >>> pil_image = Image.open(image_file)
    >>> from schooltool.attendance.tests.test_sparkline import show_image_as_text
    >>> show_image_as_text(pil_image, extracolors={'\xFF\xC0\x00': 'Y'})
    ------------------------------
    ------------------------------
    ------------------------------
    ------------------------------
    ------------------------------
    ------------------------------
    ##-##-##-##-##-##-##-##-##-YY-
    ---------------------------YY-
    ---------------------------YY-
    ---------------------------YY-
    ---------------------------YY-
    ---------------------------YY-
    ---------------------------YY-



Attendance view
---------------

A student's page contains an "Attendance" action in the menu.

    >>> joniukas = Browser()
    >>> joniukas.handleErrors = False
    >>> joniukas.addHeader('Authorization', 'Basic joniukas:gretute')
    >>> joniukas.open('http://localhost/persons/joniukas')
    >>> joniukas.getLink('Attendance', url='@@attendance.html').click()

If you go there, you see a list of unresolved absences

    >>> print joniukas.contents
    <BLANKLINE>
    ...
    <h2>Attendance of Joniukas</h2>
    ...
    ...2005-12-12 09:30: late for Great Teacher Largo -- Dancing 1 (1)...


Even if the teachers are allowed to resolve the absences (regression test)

    >>> manager.open('http://localhost/access_control.html')
    >>> manager.getControl('Teachers can modify attendance records').click()
    >>> manager.getControl('Apply').click()

the student of course can't resolve the absences himself:

    >>> joniukas.getControl('late for Great Teacher Largo').click()
    >>> joniukas.getControl('Update').click()
    >>> 'You are not allowed to modify' in joniukas.contents
    True


Retroactive attendance form
---------------------------

Some time has passed, and the teacher comes back to filling in
attendance after the lunch break the next day:

    >>> from schooltool.calendar.utils import stub_utcnow
    >>> stub_utcnow(datetime(2005, 12, 14, 16, 44, tzinfo=utc))

He knows the URL and just enters it:

    >>> largo.open("http://localhost/sections/1/"
    ...            "attendance/2005-12-14/11:35-12:20")

He gets to the retroactive attendance form.  It does not have
'ABSENT' or 'TARDY' buttons, but has a 'SUBMIT':

    >>> 'ABSENT' not in largo.contents
    True
    >>> 'TARDY' not in largo.contents
    True
    >>> 'SUBMIT' in largo.contents
    True

The default values of the radio buttons are "present":

    >>> largo.getControl(name="joniukas").value
    ['P']
    >>> largo.getControl(name="gretute").value
    ['P']

Largo enters an arrival time and tries to submit the form:

    >>> largo.getControl(name="joniukas_tardy").value = '3'
    >>> largo.getControl('Submit').click()

He gets an error:

   >>> print largo.contents
   <BLANKLINE>
   ...
   <p class="error">Arrival times only apply to tardy students</p>
   ...

He then notices that he forgot to mark Joniukas as tardy, and Gretute
as absent:

    >>> largo.getControl(name="joniukas").value =  ['T']
    >>> largo.getControl(name="gretute").value =  ['A']
    >>> largo.getControl('Submit').click()

The form submits fine.  The controls still show their values but are
disabled:

    >>> print largo.contents
    <BLANKLINE>
    ...
    <h2>Section attendance for
      Great Teacher Largo -- Dancing 1 (1)
      at 2005-12-14
      period 11:35-12:20</h2>
      ...
      <tr class="attendance-retro-row">
        <td class="attendance-absent">
           <label class="disabled">Gretute</label>
        </td>
        ...
        <td class="other">
          <input type="radio" value="A" disabled="disabled"
                 checked="checked" name="gretute" />
        </td>
        ...
      </tr>
      <tr class="attendance-retro-row">
        <td class="attendance-absent">
           <label class="disabled">Joniukas</label>
        </td>
        ...
        <td class="other">
          <input type="radio" value="T" disabled="disabled"
                 checked="checked" name="joniukas" />
          <input type="text" disabled="disabled"
                 name="joniukas_tardy" value="3" />
        </td>
      </tr>
    </table>
    ...

Resubmitting the form does nothing:

    >>> largo.getControl('Submit').click()


Epilog
------

Let's reset the "now" stub:

    >>> stub_utcnow(None)
