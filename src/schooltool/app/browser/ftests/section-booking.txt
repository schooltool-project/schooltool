Tests for resource booking in timetable events
----------------------------------------------

A manager logs in and sets up timetabling:

    >>> from schooltool.app.browser.ftests import setup
    >>> setup.addPerson('Frog', 'frog')
    >>> setup.setUpTimetabling(username='frog')

Let's create a resource:

    >>> setup.addResource('A resource')

and book it for our history class:

    >>> print rest("""
    ... PUT  /sections/1/timetables/1 HTTP/1.1
    ... Authorization: Basic manager:schooltool
    ... Content-Type: text/xml
    ...
    ... <timetable xmlns="http://schooltool.org/ns/timetable/0.1"
    ...            xmlns:xlink="http://www.w3.org/1999/xlink">
    ...   <timezone name="UTC"/>
    ...   <term id="2005-fall" />
    ...   <schooltt id="default" />
    ...   <day id="Monday">
    ...     <period id="09:30-10:25">
    ...       <activity title="History 6">
    ...           <resource xlink:type="simple"
    ...                     xlink:title="Resrouce"
    ...                     xlink:href="/resources/a-resource" />
    ...       </activity>
    ...     </period>
    ...   </day>
    ...   <day id="Wednesday">
    ...     <period id="11:35-12:20">
    ...       <activity title="History 6">
    ...           <resource xlink:type="simple"
    ...                     xlink:title="Resrouce"
    ...                     xlink:href="/resources/a-resource" />
    ...       </activity>
    ...     </period>
    ...   </day>
    ... </timetable>""", handle_errors=False)
    HTTP/1.1 200 Ok
    ...


Section events should be visible in the calendar of the resource:

    >>> manager = setup.logInManager()
    >>> manager.open('http://localhost/resources/a-resource/calendar/2005-09-07')
    >>> print analyze.queryHTML('id("content-body")', manager.contents)[0]
    <div id="content-body">
    ...
        <a href="http://localhost/sections/1/calendar/..." title="History 6">
          History 6
          <span class="start-end">
            (<span>11:35</span>
               -
             <span>12:20</span>)
          </span>
        </a>
    ...

They are editable:

    >>> manager.getLink('History 6').click()
    >>> manager.getControl('Description').value = "Assignement."
    >>> manager.getControl('Apply').click()
    >>> print analyze.queryHTML('id("content-body")', manager.contents)[0]
    <div id="content-body">
    ...
        <a href="http://localhost/sections/1/calendar/..." title="History 6">
          History 6
          <span class="start-end">
            (<span>11:35</span>
              - <span>12:20</span>)
          </span>
        </a>
    ...
      <div class="description">Assignement.</div>
    ...

Now if we will unschedule the other activity this one should retain
it's description:

    >>> manager.open('http://localhost/sections/1')
    >>> manager.getLink('Schedule').click()
    >>> manager.getControl(name="Monday.09:30-10:25").value = False
    >>> manager.getControl(name="Wednesday.11:35-12:20").value = True
    >>> manager.getControl('Save').click()

Let's look at it:

    >>> manager.open('http://localhost/resources/a-resource/calendar/2005-09-07')
    >>> print analyze.queryHTML('id("content-body")', manager.contents)[0]
    <div id="content-body">
    ...
        <a href="http://localhost/sections/1/calendar/..." title="History 6">
          History 6
          <span class="start-end">
            (<span>11:35</span>
              - <span>12:20</span>)
          </span>
        </a>
    ...
      <div class="description">Assignement.</div>
    ...

    >>> manager.getLink('Reservations').click()
    >>> manager.getLink('New Resource').click()
    >>> manager.getControl('Title').value = "Mud"
    >>> manager.getControl('Add').click()

    >>> manager.getLink('Resource', index=2).click()

    >>> manager.getControl(name='delete.mud').value = ['delete.mud']
    >>> manager.getControl(name='delete.a-resource').value = ['delete.a-resource']
    >>> manager.getControl('Book').click()
    >>> manager.open("%s/2005-09-07" % manager.url)

There should be two resources available to add there:

    >>> manager.getLink('Mud').text
    'Mud'
    >>> manager.getLink('A resource').text
    'A resource'

Let's add the Mud resource:

    >>> manager.getLink('Mud').click()

We are now redirected to the event edit view:

    >>> manager.getControl('Title').value
    '09:30-10:25'

    >>> manager.getControl('Date').value
    '2005-09-07'

The resource should be displayed under a list in the event edit view:

    >>> print analyze.queryHTML('id("content-body")', manager.contents)[0]
    <div id="content-body">
    ...
    ...Booked Resources...
    ...
    ...Title...
    ...Type...
    ...
    ...Mud...
    ...Resource...
    ...

And the resource is added:

    >>> manager.getLink('Book resources').click()
    >>> print analyze.queryHTML('//label[@for="remove_item.mud"]', manager.contents)[0]
    <label for="remove_item.mud">Mud</label>
