Navigation
----------

We have a view called 'schooltool_navigation'.  Its output is included in the
page macros template to get the navigation portlet.  Browser requests, such
as used in this functional test, do not represent normal usage.


Set up
------

We will create a SchoolTool object and a resource

    >>> from zope.testbrowser import Browser
    >>> manager = Browser()
    >>> manager.addHeader('Authorization', 'Basic mgr:mgrpw')
    >>> manager.handleErrors = False
    >>> manager.open('http://localhost/contents.html')

    >>> manager.getLink('SchoolTool').click()
    >>> manager.getControl(name='new_value').value = 'frogpond'
    >>> manager.getControl('Apply').click()
    >>> manager.getLink('frogpond').click()


Navigation view
---------------

The `schooltool_navigation` view is registered for "*".  It will present
a portlet with the navigation links depending on the authorized user.

    >>> manager.open('http://localhost/frogpond/schooltool_navigation')

    >>> print analyze.queryHTML('//a[text()="Persons"]', manager.contents)[0]
    <a href="http://localhost/frogpond/persons">Persons</a>

    >>> print analyze.queryHTML('//a[text()="Courses"]', manager.contents)[0]
    <a href="http://localhost/frogpond/courses">Courses</a>

    >>> print analyze.queryHTML('//a[text()="Sections"]', manager.contents)[0]
    <a href="http://localhost/frogpond/sections">Sections</a>

    >>> print analyze.queryHTML('//a[text()="Resources"]', manager.contents)[0]
    <a href="http://localhost/frogpond/resources">Resources</a>

    >>> print analyze.queryHTML('//a[text()="Terms"]', manager.contents)[0]
    <a href="http://localhost/frogpond/terms">Terms</a>

    >>> print analyze.queryHTML('//a[text()="School Timetables"]',
    ...                         manager.contents)[0]
    <a href="http://localhost/frogpond/ttschemas">School Timetables</a>

    >>> print analyze.queryHTML('//a[text()="Levels"]', manager.contents)[0]
    <a href="http://localhost/frogpond/levels">Levels</a>

The main technical challenge in this view is finding the nearest
``ISchoolToolApplication`` instance, and providing the links relative to
it.

    >>> manager.open('http://localhost/frogpond/'
    ...              'groups/manager/schooltool_navigation')

    >>> print analyze.queryHTML('//a[text()="Persons"]', manager.contents)[0]
    <a href="http://localhost/frogpond/persons">Persons</a>

    >>> print analyze.queryHTML('//a[text()="Courses"]', manager.contents)[0]
    <a href="http://localhost/frogpond/courses">Courses</a>

    >>> print analyze.queryHTML('//a[text()="Sections"]', manager.contents)[0]
    <a href="http://localhost/frogpond/sections">Sections</a>

    >>> print analyze.queryHTML('//a[text()="Resources"]', manager.contents)[0]
    <a href="http://localhost/frogpond/resources">Resources</a>

    >>> print analyze.queryHTML('//a[text()="Terms"]', manager.contents)[0]
    <a href="http://localhost/frogpond/terms">Terms</a>

    >>> print analyze.queryHTML('//a[text()="School Timetables"]',
    ...                         manager.contents)[0]
    <a href="http://localhost/frogpond/ttschemas">School Timetables</a>

    >>> print analyze.queryHTML('//a[text()="Levels"]', manager.contents)[0]
    <a href="http://localhost/frogpond/levels">Levels</a>

This view is only available in the SchoolTool skin:

    >>> manager.open('http://localhost/schooltool_navigation')
    Traceback (most recent call last):
    ...
    NotFound: Object: <zope.app.folder.folder.Folder object at ...>,
                      name: u'schooltool_navigation'