#!/bin/sh
# postinst script for -common package

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

package=schooltool
case "$1" in
    configure|reconfigure)
    # Create a system user
    if ! getent group $package > /dev/null 2>&1 ; then
        addgroup --system --quiet $package
    fi
    if ! getent passwd $package > /dev/null 2>&1 ; then
        adduser --quiet \
        --system --disabled-login --ingroup $package \
        --home /var/lib/$package --no-create-home \
        $package
    fi
    # Create files and directories
    [ -d /var/lib/$package ] || mkdir -p /var/lib/$package
    [ -d /var/run/$package ] || mkdir -p /var/run/$package
    [ -d /var/log/$package ] || mkdir -p /var/log/$package
    chown $package:$package /var/lib/$package
    chown $package:$package /var/run/$package
    chown $package:$package /var/log/$package
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
    
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
